name: macports

on:
  workflow_dispatch:

env:
  CC: clang
  CXX: clang++
  CPATH: /opt/local/include
  LIBRARY_PATH: /opt/local/lib
  CFLAGS: -g -O2 -Wno-deprecated-declarations
  CROSSCFLAGS: -g -O2
  LDFLAGS: -Wl,-headerpad_max_install_names -Wl,-rpath,@loader_path/../../ -Wl,-rpath,/opt/local/lib -Wl,-rpath,/opt/X11/lib
  MACOSX_DEPLOYMENT_TARGET: 10.14
  WINE_CONFIGURE: $GITHUB_WORKSPACE/sources/wine/configure
  BUILDROOT: $GITHUB_WORKSPACE/build
  WINE_INSTALLROOT: install

jobs:
  wine-crossover:
    strategy:
      fail-fast: false
      matrix:
        CROSS_OVER_VERSION: [22.1.1] # 22.1.0, 22.0.1, 22.0.0, 21.2.0, 21.1.0, 21.0.0, 20.0.4, 20.0.2, 20.0.1, 20.0.0, 19.0.2, 19.0.1, 19.0.0

    runs-on: macos-latest

    env:
      CROSS_OVER_SOURCE_URL: https://media.codeweavers.com/pub/crossover/source/crossover-sources-${{ matrix.CROSS_OVER_VERSION }}.tar.gz
      CROSS_OVER_LOCAL_FILE: crossover-sources-${{ matrix.CROSS_OVER_VERSION }}
      WINE_INSTALLATION: wine-cx-${{ matrix.CROSS_OVER_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bootstrap MacPorts
        run: . .github/workflows/bootstrap.sh

      - name: Installing cx-llvm
        run: |
          curl -LJO https://github.com/Gcenx/homebrew-wine/releases/download/cx-llvm-22.0.1/cx-llvm-22.0.1.big_sur.bottle.tar.gz
          sudo mkdir /opt/cx-llvm
          sudo tar -xpf "cx-llvm-22.0.1.big_sur.bottle.tar.gz" --strip-components=2 -C /opt/cx-llvm

      - name: Adding cx-llvm & MacPorts into $PATH
        run: |
          set -eu
          echo "/opt/cx-llvm/bin" >> $GITHUB_PATH
          echo "/opt/local/bin" >> $GITHUB_PATH
          echo "/opt/local/sbin" >> $GITHUB_PATH

      - name: Installing dependencies build
        run: |
          sudo port install \
            bison \
            gettext \
            mingw-w64 \
            pkgconfig

      - name: Installing dependencies libraries
        run: |
          sudo port install \
            freetype \
            gettext-runtime \
            gnutls \
            moltenvk \
            libsdl2

      - name: Downloading Crossover Sources
        run: |
          curl -o ${{ env.CROSS_OVER_LOCAL_FILE }}.tar.gz ${{ env.CROSS_OVER_SOURCE_URL }}

      - name: Extract Crossover Sources
        run: |
          tar xf ${{ env.CROSS_OVER_LOCAL_FILE }}.tar.gz

      - name: Add distversion.h
        run: |
          cp distversion.h sources/wine/include/distversion.h

      - name: Configure wine64
        run: |
          mkdir -p ${{ env.BUILDROOT }}/wine64
          pushd ${{ env.BUILDROOT }}/wine64
          ${{ env.WINE_CONFIGURE }} \
            --prefix= \
            --disable-tests \
            --disable-winedbg \
            --enable-win64 \
            --without-alsa \
            --without-capi \
            --with-coreaudio \
            --with-cups \
            --without-dbus \
            --without-fontconfig \
            --with-freetype \
            --with-gettext \
            --without-gettextpo \
            --without-gphoto \
            --with-gnutls \
            --without-gssapi \
            --without-gstreamer \
            --without-inotify \
            --without-krb5 \
            --with-mingw \
            --without-netapi \
            --without-openal \
            --with-opencl \
            --with-opengl \
            --without-oss \
            --with-pcap \
            --with-pthread \
            --without-pulse \
            --without-sane \
            --with-sdl \
            --without-udev \
            --with-unwind \
            --without-usb \
            --without-v4l2 \
            --with-vulkan \
            --without-x
          popd

      - name: Build wine64
        run: |
          pushd ${{ env.BUILDROOT }}/wine64
          make -j$(sysctl -n hw.ncpu 2>/dev/null)
          popd

      - name: Install wine64
        run: |
          pushd ${{ env.BUILDROOT }}/wine64
          make install-lib DESTDIR="$GITHUB_WORKSPACE/${{ env.WINE_INSTALLROOT }}"
          popd

      - name: Configure wine32on64
        run: |
          mkdir -p ${{ env.BUILDROOT }}/wine32on64
          pushd ${{ env.BUILDROOT }}/wine32on64
          ${{ env.WINE_CONFIGURE }} \
            --prefix= \
            --disable-loader \
            --disable-tests \
            --disable-winedbg \
            --enable-win32on64 \
            --without-alsa \
            --without-capi \
            --with-coreaudio \
            --with-cups \
            --without-dbus \
            --without-fontconfig \
            --with-freetype \
            --with-gettext \
            --without-gettextpo \
            --without-gphoto \
            --with-gnutls \
            --without-gssapi \
            --without-gstreamer \
            --without-inotify \
            --without-krb5 \
            --with-mingw \
            --without-netapi \
            --without-openal \
            --with-opencl \
            --with-opengl \
            --without-oss \
            --with-pcap \
            --with-pthread \
            --without-pulse \
            --without-sane \
            --with-sdl \
            --without-udev \
            --with-unwind \
            --without-usb \
            --without-v4l2 \
            --with-vulkan \
            --with-wine64=${{ env.BUILDROOT }}/wine64 \
            --without-x
          popd

      - name: Build wine32on64
        run: |
          pushd ${{ env.BUILDROOT }}/wine32on64
          make -j$(sysctl -n hw.ncpu 2>/dev/null)
          popd

      - name: Install wine32on64
        run: |
          pushd ${{ env.BUILDROOT }}/wine32on64
          make install-lib DESTDIR="$GITHUB_WORKSPACE/${{ env.WINE_INSTALLROOT }}"
          popd

      - name: Tar Wine
        run: |
          tar -czvf ${{ env.WINE_INSTALLATION }}.tar.gz ${{ env.WINE_INSTALLROOT }}

      - name: Upload Wine
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WINE_INSTALLATION }}
          path: ${{ env.WINE_INSTALLATION }}.tar.gz
